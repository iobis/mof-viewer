{"version":3,"sources":["App.js","index.js"],"names":["App","useState","mofs","setMofs","datasets","setDatasets","search","setSearch","useEffect","fetch","then","res","json","result","map","mof","parts","key","split","length","startsWith","measurementType","measurementTypeID","records","processMofs","results","measurementTypeCombination","newMofs","toLowerCase","includes","hide","console","log","className","placeholder","type","value","onChange","e","target","dataset","i","href","id","title","Name","filter","onClick","window","scrollTo","url","viewDatasets","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KA0HeA,MAtGf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGmBF,mBAAS,IAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIeJ,mBAAS,IAJxB,mBAINK,EAJM,KAIEC,EAJF,KAwCb,OAlCAC,qBAAU,WACRC,MAAM,2GACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIV,EA3BpB,SAAqBD,GACnB,OAAOA,EAAKY,KAAI,SAAAC,GACd,IAAIC,EAAQD,EAAIE,IAAIC,MAAM,KAQ1B,OAPqB,IAAjBF,EAAMG,SAENH,EADEA,EAAM,GAAGI,WAAW,QACd,CAAC,KAAMJ,EAAM,IAEb,CAACA,EAAM,GAAI,OAGhB,CACLK,gBAAiBL,EAAM,GACvBM,kBAAmBN,EAAM,GACzBO,QAASR,EAAIQ,YAcSC,CAAYX,EAAOY,QAAQC,kCAClD,IAEHlB,qBAAU,WACR,IAAMmB,EAAUzB,EAAKY,KAAI,SAACC,GAMxB,OALKA,EAAIM,iBAAoBN,EAAIM,gBAAgBO,cAAcC,SAASvB,GAGtES,EAAIe,MAAO,EAFXf,EAAIe,MAAO,EAINf,KAETgB,QAAQC,IAAIL,GACZxB,EAAQwB,KACP,CAACrB,IAkBF,qBAAK2B,UAAU,sBAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,4CAEA,qBAAKA,UAAU,YAAf,SACE,uBAAOC,YAAY,SAASC,KAAK,OAAOC,MAAO9B,EAAQ+B,SAAU,SAACC,GAAD,OAAO/B,EAAU+B,EAAEC,OAAOH,YAI3FhC,GAAYA,EAASe,OAAS,GAC9B,gCACE,0CACA,wBAAOc,UAAU,iBAAjB,UACE,gCACE,+BACE,uCACA,8CAGJ,gCAEI7B,EAASU,KAAI,SAAC0B,EAASC,GAAV,OAAgB,+BAC3B,6BAAI,mBAAGC,KAAM,4BAA8BF,EAAQG,GAAIJ,OAAO,SAA1D,SAAoEC,EAAQI,UAChF,6BAAKJ,EAAQjB,YAFuBkB,cAUhD,mDAGEvC,GAAQA,EAAKiB,OAAS,EACtB,wBAAO0B,KAAK,iBAAZ,UACE,gCACE,+BACE,iDACA,mDACA,8CAGJ,gCAEI3C,EAAK4C,QAAO,SAAA/B,GAAG,OAAKA,EAAIe,QAAMhB,KAAI,SAACC,EAAK0B,GAAN,OAAY,+BAC5C,6BAAK1B,EAAIM,kBACT,6BAAKN,EAAIO,oBACT,oBAAIW,UAAU,8BAA8Bc,QAAS,kBAhErE,SAAsBhC,GACpBiC,OAAOC,SAAS,EAAG,GACnB5C,EAAY,IACZ,IAAI6C,EAAM,gEACNnC,EAAIM,kBACN6B,EAAMA,EAAM,mBAAqBnC,EAAIM,gBAAkB,KAErDN,EAAIO,oBACN4B,EAAMA,EAAM,oBAAsBnC,EAAIO,kBAAoB,KAE5Db,MAAMyC,GACLxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIR,EAAYQ,EAAOY,YAoDsC0B,CAAapC,IAAxE,SAA+EA,EAAIQ,YAH9BkB,WAQ3D,iDC7GZW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0c972b79.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction processMofs(mofs) {\n  return mofs.map(mof => {\n    let parts = mof.key.split(\"|\");\n    if (parts.length === 1) {\n      if (parts[0].startsWith(\"http\")) {\n        parts = [null, parts[0]];\n      } else {\n        parts = [parts[0], null];\n      }\n    }\n    return {\n      measurementType: parts[0],\n      measurementTypeID: parts[1],\n      records: mof.records\n    };\n  });\n}\n\nfunction App() {\n\n  const [mofs, setMofs] = useState([]);\n  const [datasets, setDatasets] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://api.obis.org/facet?facets=measurementTypeCombination&dropped=include&absence=include&size=10000\")\n    .then(res => res.json())\n    .then(result => setMofs(processMofs(result.results.measurementTypeCombination)));\n  }, []);\n\n  useEffect(() => {\n    const newMofs = mofs.map((mof) => {\n      if (!mof.measurementType || !mof.measurementType.toLowerCase().includes(search)) {\n        mof.hide = true;\n      } else {\n        mof.hide = false;\n      }\n      return mof;\n    });\n    console.log(newMofs)\n    setMofs(newMofs);\n  }, [search]);\n\n  function viewDatasets(mof) {\n    window.scrollTo(0, 0);\n    setDatasets([]);\n    let url = \"https://api.obis.org/dataset?dropped=include&absence=include&\";\n    if (mof.measurementType) {\n      url = url + \"measurementtype=\" + mof.measurementType + \"&\";\n    }\n    if (mof.measurementTypeID) {\n      url = url + \"measurementtypeid\" + mof.measurementTypeID + \"&\";\n    }\n    fetch(url)\n    .then(res => res.json())\n    .then(result => setDatasets(result.results));\n  }\n  \n  return (\n    <div className=\"App container-fluid\">\n      <header className=\"App-header\">\n        <h1>MoF viewer</h1>\n\n        <div className=\"pt-2 pb-2\">\n          <input placeholder=\"search\" type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}></input>\n        </div>\n\n        {\n          datasets && datasets.length > 0 &&\n          <div>\n            <h2>Datasets</h2>\n            <table className=\"table table-sm\">\n              <thead>\n                <tr>\n                  <th>title</th>\n                  <th>records</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  datasets.map((dataset, i) => <tr key={i}>\n                    <td><a href={\"https://obis.org/dataset/\" + dataset.id} target=\"_blank\">{dataset.title}</a></td>\n                    <td>{dataset.records}</td>\n                  </tr>) \n                }\n              </tbody>\n            </table>\n          </div>\n        }\n\n        <h2>Measurement types</h2>\n\n        {\n          mofs && mofs.length > 0 ? \n          <table Name=\"table table-sm\">\n            <thead>\n              <tr>\n                <th>measurementType</th>\n                <th>measurementTypeID</th>\n                <th>records</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                mofs.filter(mof => !mof.hide).map((mof, i) => <tr key={i}>\n                  <td>{mof.measurementType}</td>\n                  <td>{mof.measurementTypeID}</td>\n                  <td className=\"text-primary cursor-pointer\" onClick={() => viewDatasets(mof)}>{mof.records}</td>\n                </tr>) \n              }\n            </tbody>\n          </table>\n          : <p>Loading...</p>\n        }\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}