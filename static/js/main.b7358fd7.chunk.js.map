{"version":3,"sources":["App.js","useDebouncedEffect.js","index.js"],"names":["nf","Intl","NumberFormat","componentDecorator","href","text","key","target","rel","App","useState","mofs","setMofs","mof","setMof","datasets","setDatasets","search","setSearch","sort","setSort","datasetsLoading","setDatasetsLoading","prevSortRef","useRef","effect","delay","deps","callback","useCallback","useEffect","handler","setTimeout","clearTimeout","useDebouncedEffect","length","newMofs","map","m","measurementType","toLowerCase","includes","hide","fetch","then","res","json","result","parts","split","startsWith","measurementTypeID","records","processMofs","results","measurementTypeCombination","current","ascending","a","b","className","dataset","i","id","title","nodes","x","name","join","format","htmlFor","type","value","onChange","e","onClick","filter","prefLabel","url","replace","label","fetchLabel","window","scrollTo","viewDatasets","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7358fd7.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport Linkify from \"react-linkify\";\n\nfunction processMofs(mofs) {\n  return mofs.map(mof => {\n    let parts = mof.key.split(\"|\");\n    if (parts.length === 1) {\n      if (parts[0].startsWith(\"http\")) {\n        parts = [null, parts[0]];\n      } else {\n        parts = [parts[0], null];\n      }\n    }\n    return {\n      measurementType: parts[0],\n      measurementTypeID: parts[1],\n      records: mof.records\n    };\n  });\n}\n\nconst nf = new Intl.NumberFormat();\n\nconst componentDecorator = (href, text, key) => (\n  <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n      {text}\n  </a>\n);\n\nfunction App() {\n\n  const [mofs, setMofs] = useState([]);\n  const [mof, setMof] = useState(null);\n  const [datasets, setDatasets] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"records\");\n  const [datasetsLoading, setDatasetsLoading] = useState(false);\n  const prevSortRef = useRef(\"records\");\n\n  useDebouncedEffect(() => {\n    if (mofs && mofs.length > 0) {\n      const newMofs = mofs.map((m) => {\n        if (!m.measurementType || !m.measurementType.toLowerCase().includes(search.toLowerCase())) {\n          m.hide = true;\n        } else {\n          m.hide = false;\n        }\n        return m;\n      });\n      setMofs(newMofs);\n    }\n  }, 500, [search]);\n\n  useEffect(() => {\n    fetch(\"https://api.obis.org/facet?facets=measurementTypeCombination&dropped=include&absence=include&size=10000\")\n    .then(res => res.json())\n    .then(result => setMofs(processMofs(result.results.measurementTypeCombination)));\n  }, []);\n\n  useEffect(() => {\n    if (mofs && mofs.length > 0 && sort !== prevSortRef.current) {\n      prevSortRef.current = sort;\n      const newMofs = [...mofs];\n      const ascending = sort === \"records\" ? -1 : 1;\n      newMofs.sort((a, b) => {\n        if (!a[sort]) return ascending;\n        if (!b[sort]) return -ascending;\n        if (sort === \"records\") {\n          return (a === null || a === \"\" || a[sort] > b[sort]) ? ascending : -ascending;\n        } else {\n          return (a === null || a === \"\" || a[sort].toLowerCase() > b[sort].toLowerCase()) ? ascending : -ascending;\n        }\n      });\n      setMofs(newMofs);\n    }\n  }, [sort, mofs])\n\n  function fetchLabel(id) {\n    if (id && id.startsWith(\"http://vocab.nerc.ac.uk/collection\")) {\n      let url = id + \"?_profile=skos&_mediatype=application/json\";\n      url = url.replace(\"http://\", \"https://\");\n      fetch(url)\n      .then(res => res.json())\n      .then(results => {\n        if (results && results.length > 0 && \"http://www.w3.org/2004/02/skos/core#prefLabel\" in results[0]) {\n          const label = results[0][\"http://www.w3.org/2004/02/skos/core#prefLabel\"][0][\"@value\"]\n          const newMofs = mofs.map(mof => {\n            if (mof.measurementTypeID === id) {\n              mof.prefLabel = label;\n            }\n            return mof;\n          });\n          setMofs(newMofs);\n        }\n      });\n    }\n  }\n\n  function viewDatasets(mof) {\n    window.scrollTo(0, 0);\n    setMof(mof);\n    setDatasets([]);\n    setDatasetsLoading(true);\n    let url = \"https://api.obis.org/dataset?dropped=include&absence=include&\";\n    if (mof.measurementType) {\n      url = url + \"measurementtype=\" + mof.measurementType + \"&\";\n    }\n    if (mof.measurementTypeID) {\n      url = url + \"measurementtypeid\" + mof.measurementTypeID + \"&\";\n    }\n    fetch(url)\n    .then(res => res.json())\n    .then(result => {\n      setDatasets(result.results);\n      setDatasetsLoading(false);\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-light bg-light px-4 py-3\">\n        <a className=\"text-xl navbar-brand\" href=\"/\">OBIS Measurement Types</a>\n      </nav>\n\n      <div className=\"container-fluid pt-3\">\n        <div className=\"row\">\n          <div className=\"col-xl-6 col-md-8 col-sm-12\">\n            <p>This is an overview of all measurementType(ID) combinations in the OBIS database. Click the number of records in the last column to see the datasets containing a specific measurementType(ID) combination.</p>\n            <p>Issues at <a href=\"https://github.com/iobis/mof-viewer\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/iobis/mof-viewer</a>.</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3>Datasets</h3>\n\n            { datasetsLoading && <p className=\"loading\">Loading datasets...</p> }\n\n            { datasets && datasets.length > 0 &&\n              <div>\n                <p>Datasets for <b>{ mof.measurementType } { mof.measurementTypeID }</b></p>\n                <table className=\"table table-sm table-hover\">\n                  <thead>\n                    <tr>\n                      <th>title</th>\n                      <th>node</th>\n                      <th>records</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      datasets.map((dataset, i) => <tr key={i}>\n                        <td><a href={\"https://obis.org/dataset/\" + dataset.id} target=\"_blank\" rel=\"noreferrer noopener\">{dataset.title}</a></td>\n                        <td>{dataset.nodes.map(x => x.name).join(\", \")}</td>\n                        <td>{nf.format(dataset.records)}</td>\n                      </tr>) \n                    }\n                  </tbody>\n                </table>\n              </div>\n            }\n\n            { !datasetsLoading && datasets && datasets.length === 0 && <p>No datasets selected.</p> }\n\n            <h3>Measurement types</h3>\n\n            <div className=\"pt-2 pb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-sm-1 col-form-label\" htmlFor=\"search\">Search</label>\n                <div className=\"col-sm-4\">\n                  <input className=\"form-control form-control-md\" id=\"search\" type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}></input>\n                </div>\n              </div>\n            </div>\n\n            {\n              mofs && mofs.length > 0 ? \n              <table className=\"table table-sm table-hover\">\n                <thead>\n                  <tr>\n                    <th className=\"cursor-pointer text-nowrap\" onClick={() => setSort(\"measurementType\")}>measurementType { sort === \"measurementType\" && <span className=\"ml-1\">&darr;</span> }</th>\n                    <th className=\"cursor-pointer text-nowrap\" onClick={() => setSort(\"measurementTypeID\")}>measurementTypeID { sort === \"measurementTypeID\" && <span className=\"ml-1\">&darr;</span> }</th>\n                    <th className=\"cursor-pointer text-nowrap\">prefLabel</th>\n                    <th className=\"cursor-pointer text-nowrap\" onClick={() => setSort(\"records\")}>records { sort === \"records\" && <span className=\"ml-1\">&darr;</span> }</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    mofs.filter(mof => !mof.hide).map((mof, i) => <tr key={i}>\n                      <td>{mof.measurementType}</td>\n                      <td><Linkify componentDecorator={componentDecorator}>{mof.measurementTypeID}</Linkify></td>\n                      <td>{mof.prefLabel ? mof.prefLabel : mof.measurementTypeID ? <span className=\"actionbutton cursor-pointer\" onClick={() => fetchLabel(mof.measurementTypeID)}>find</span> : \"\"}</td>\n                      <td className=\"text-primary cursor-pointer\" onClick={() => viewDatasets(mof)}>{nf.format(mof.records)}</td>\n                    </tr>) \n                  }\n                </tbody>\n              </table>\n              : <p className=\"loading\">Loading measurement types...</p>\n            }\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect } from \"react\";\n\nexport const useDebouncedEffect = (effect, delay , deps) => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const callback = useCallback(effect, deps);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            callback();\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [callback, delay]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}